@model BlogViewModels.RolesViewModel
@{ Layout = null;}


<form id="frmAddOrEdit" asp-action="AddOrEdit" onsubmit="return jQueryAjaxPost(this);">

    <div class="form-group role">
        <label>角色ID</label>
        <input type="text" asp-for="role.RoleId" class="form-control" readonly>
    </div>
    <div class="form-group role">
        <label>角色名稱</label>
        <input type="text" asp-for="role.RoleName" class="form-control" required>
    </div>
    <div class="form-group role">
        <label>可查詢</label>
        <input type="radio" asp-for="role.CanQuery" value="@bool.TrueString" checked />@bool.TrueString
    </div>
    <div class="form-group role">
        <label>可維護</label>
        <input type="radio" id="role_CanUpdate_1" asp-for="role.CanUpdate" value="@bool.TrueString" />@bool.TrueString
        <input type="radio" id="role_CanUpdate_2" asp-for="role.CanUpdate" value="@bool.FalseString" />@bool.FalseString
    </div>
    <div class="form-group role add-platform">
        <label>前/後台</label>
        <select asp-for="role.Platform" class="form-control">
            <option value="前台">前台</option>
            <option value="後台">後台</option>
        </select>
    </div>
    <div class="form-group role edit-platform">
        <label>前/後台</label>
        <input type="text" asp-for="role.Platform" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label>選單項目</label>
        @*<partial name="_TreeView" />*@
        <partial name="~/Views/Shared/_TreeView.cshtml" />
        <input type="hidden" asp-for="TreeIds" />
    </div>
    <div class="row role can-maintain">
        <div class="col-md-6">
            <input type="button" class="btn btn-default btn-light btn-block" data-dismiss="modal" value="取消">
        </div>
        <div class="col-md-6">
            <input type="submit" class="btn btn-primary btn-block" value="儲存">
        </div>
    </div>
</form>

<script>
    $(function () {
        //初始化tree
        var oTree = initailTree([]);
         //切換前後台選單
        $("#role_Platform").on("change", oTree, function (event) {
            getTreeData(oTree ,this.value, '@(Model.role == null ? "" : Model.role.RoleId)');
        });
        //第一次載入時觸發change事件Load Tree Data
        $("#role_Platform").trigger("change", oTree);
        //debugger
        //顯示或隱藏畫面DOM物件
        showOrHide();
    });

    showOrHide = () => {
        if ('@ViewBag.State.ToString()' == 'detail') {
            $('.role').hide();
        }
        else if ('@ViewBag.State.ToString()' == 'add') {
            $('.edit-platform').hide();
            $('.add-platform').show();
        }
        else if ('@ViewBag.State.ToString()' == 'view') {
            $('.can-maintain').hide();
            $('.edit-platform').show();
            $('.add-platform').hide();
        }
        else {
            $('.role').show();
            $('.edit-platform').show();
            $('.add-platform').hide();
        }
    }

    initailTree = (list) => {

        var oTree = simTree({
            el: '#tree',
            data: list,
            check: true,
            linkParent: true,
            onClick: function (item) {
                console.log(item)
                //debugger
            },
            onChange: function (item) {
                console.log(item)
                //debugger
                var checkedMenus = '';
                $(item).each(function (index, obj) {
                    checkedMenus += obj.id + ',';
                });
                if (checkedMenus.length > 0) {
                    checkedMenus = checkedMenus.slice(0, checkedMenus.length - 1);
                }
                //記錄勾選的選單
                $("#TreeIds").val(checkedMenus);
            }
        });

        return oTree;
    }


    getTreeData = (oTree ,platform, id) => {
        //get data
        //debugger
        var roleModel = {
            Platform: platform,
            RoleId: id
        };
        $.ajax({
            type: "post",
            url: "/Roles/GetTreeData",
            data: JSON.stringify(roleModel),
            contentType: "application/json", //參數型態
            dataType: "json",//回傳的資料型態
            success: function (res) {
                //debugger
                var list = [];
                if (res != null && res.data != undefined) {
                    var checkedMenus = '';
                    $(res.data).each(function (index, obj) {
                        if (res.menus != undefined) {
                            var ans = res.menus.some(function (item, i, array) {
                                return item.id == obj.id;
                            });
                            if (ans) {
                                obj.checked = 'checked'; //==> 有bug, 切換select時class並沒有依照此屬性顯示
                                checkedMenus += obj.id + ',';
                            }
                        }
                        list.push(obj);
                    });

                    if (checkedMenus.length > 0) {
                        checkedMenus = checkedMenus.slice(0, checkedMenus.length - 1);
                    }
                    //記錄勾選的選單
                    $("#TreeIds").val(checkedMenus);
                }
                oTree.refresh(list);
                //因為照範例提供data.checked = 'checked'的屬性, 當重新refresh data後,
                //data裡面已經沒有checked的屬性, 但tree仍顯示之前勾選的checkbox,
                //故在此客製動態加入checked class
                if (list.length > 0) {
                    res.data.forEach(function (item, index, array) {
                        $("#tree li[data-id='" + item.id + "'] .sim-tree-checkbox").first().removeClass('checked');
                    });
                    res.menus.forEach(function (item, index, array) {
                        $("#tree li[data-id='" + item.id + "'] .sim-tree-checkbox").first().addClass('checked');
                    });
                }
            },
            error: function (xhr, errstate, err) {
                debugger
                console.log(err);
            }
        });
    }



</script>



