@model BlogViewModels.UserIntroViewModel
@{ Layout = null;}
@addTagHelper *, BlogBackend

<form id="frmAddOrEdit" asp-action="AddOrEdit" onsubmit="return jQueryAjaxPost(this);">

    <div class="form-group">
        <label>會員帳號</label>
        <input type="text" asp-for="UserId" class="form-control">
        <span asp-validation-for="UserId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>個人簡介</label>
        <div id="editor" class="toolbar ql-toolbar ql-snow "></div>
        <input type="hidden" asp-for="Introduction" />
    </div>
    <div class="form-group">
        <label>照片</label>
        <div class="custom-file">
            <input asp-for="ImageFile" class="custom-file-input " id="customFile" />
            <label for="customFile" class="custom-file-label">選擇圖檔</label>
            <span asp-validation-for="ImageFile" class="text-danger"></span>

        </div>

    </div>
    <div class="row role can-maintain">
        <div class="col-md-6">
            <input type="button" class="btn btn-default btn-light btn-block" data-dismiss="modal" value="取消">
        </div>
        <div class="col-md-6">
            <input type="submit" class="btn btn-primary btn-block" value="儲存">
        </div>
    </div>
</form>

<script>
    $(function () {
        initialEditor();


        // Add the following code if you want the name of the file appear on select
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
        //debugger
        //顯示或隱藏畫面DOM物件
        showOrHide();
    });
    initialEditor = () => {
        var quill = new Quill('#editor', {
            theme: 'snow'
        });

        quill.root.innerHTML = '@Html.Raw(Model.Introduction)';

        //quill.on('selection-change', function (range, oldRange, source) {
        quill.on('text-change', function (delta, oldDelta, source) {
            //if (range) {
            //    if (range.length == 0) {
            //        console.log('User cursor is on', range.index);
            //    } else {
            //        var text = quill.getText(range.index, range.length);
            //        console.log('User has highlighted', text);
            //    }
            //} else {
            //    debugger
            //    var html = quill.root.innerHTML;
            //    $('#Introduction').val(html);

            //    console.log('Cursor not in the editor');
            //}
            if (source == 'api') {
                console.log("An API call triggered this change.");
            } else if (source == 'user') {
                var html = quill.root.innerHTML;
                $('#Introduction').val(html);
                console.log("A user action triggered this change.");
            }
        });
    }

    showOrHide = () => {
        @*if ('@ViewBag.State.ToString()' == 'detail') {
            $('.role').hide();
        }
        else if ('@ViewBag.State.ToString()' == 'add') {
            $('.edit-platform').hide();
            $('.add-platform').show();
        }
        else if ('@ViewBag.State.ToString()' == 'view') {
            $('.can-maintain').hide();
            $('.edit-platform').show();
            $('.add-platform').hide();
        }
        else {
            $('.role').show();
            $('.edit-platform').show();
            $('.add-platform').hide();
        }*@
    }

</script>



